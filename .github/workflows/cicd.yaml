name: App Build & Push

env:
  TF_CLOUD_ORGANIZATION: strukt
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  TF_WORKSPACE: exess
  CONFIG_DIRECTORY: "/github/workspace/terraform"

jobs:
  paths:
    name: Paths
    runs-on: ubuntu-latest
    outputs:
      app: ${{ steps.changes.outputs.app }}
      api: ${{ steps.changes.outputs.api }}
      terra: ${{ steps.changes.outputs.terra }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: "Check Paths"
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            app:
              - 'app/**'
            api:
              - 'api/**'
            terra:
              - 'terraform/**'
  plan:
    name: "Plan"
    needs: ["paths"]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        if: needs.paths.outputs.terra == 'true' || contains(github.event.head_commit.message, 'build-all')
        uses: actions/checkout@v3

      - name: Upload Configuration
        if: needs.paths.outputs.terra == 'true' || contains(github.event.head_commit.message, 'build-all')
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: plan-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          # speculative: true

      - name: Create Plan Run
        if: needs.paths.outputs.terra == 'true' || contains(github.event.head_commit.message, 'build-all')
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: plan-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
          plan_only: true

      - name: Get Plan Output
        if: needs.paths.outputs.terra == 'true' || contains(github.event.head_commit.message, 'build-all')
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.0
        id: plan-output
        with:
          plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}
  apply:
    name: "Apply"
    runs-on: ubuntu-latest
    needs: [plan]
    permissions:
      contents: read
    steps:
      - name: Checkout
        if: needs.paths.outputs.terra == 'true' || contains(github.event.head_commit.message, 'build-all')
        uses: actions/checkout@v3

      - name: Upload Configuration
        if: needs.paths.outputs.terra == 'true' || contains(github.event.head_commit.message, 'build-all')
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        if: needs.paths.outputs.terra == 'true' || contains(github.event.head_commit.message, 'build-all')
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: needs.paths.outputs.terra == 'true' || contains(github.event.head_commit.message, 'build-all') && fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
  app:
    name: "App"
    if: needs.paths.outputs.app == 'true' || needs.paths.outputs.terra == 'true' || contains(github.event.head_commit.message, 'build-all')
    environment: production
    runs-on: ubuntu-latest
    needs: ["apply"]
    permissions:
      contents: read
    steps:
      - name: "Checkout Github Action"
        uses: actions/checkout@v3
      - run: |
          echo ${{ needs.paths.outputs.app }}

      - name: Workspace Output
        uses: hashicorp/tfc-workflows-github/actions/workspace-output@main
        id: state
        with:
          workspace: ${{ env.TF_WORKSPACE }}
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.LOGIN_SERVER }}
          username: ${{ vars.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          tags: ${{ vars.LOGIN_SERVER }}/${{ vars.APP_NAME }}:latest
          build-args: |
            "PUBLIC_API_URL=${{ vars.API_URL }}"
            "URL=${{ vars.URL }}"
            "VERIFICATION_KEY=${{ secrets.VERIFY_KEY }}"
  api:
    if: needs.paths.outputs.api == 'true' || needs.paths.outputs.terra == 'true' || contains(github.event.head_commit.message, 'build-all')
    name: "Api"
    needs: ["apply"]
    environment: production
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: "Checkout Github Action"
        uses: actions/checkout@v3
      - name: "Docker Login"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.LOGIN_SERVER }}
          username: ${{ vars.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./api
          push: true
          tags: ${{ vars.LOGIN_SERVER }}/${{ vars.API_NAME }}:latest
          build-args: |
            "blob_service_url=${{vars.BLOB_URL }}"
            "blob_acc_key=${{vars.BLOB_KEY }}"
            "mssql_conn=${{ secrets.MSSQL_CONN }}"
            "cors=${{ vars.CORS }}"
            "resend_key=${{ secrets.RESEND_KEY }}"
            "verification_key=${{ secrets.VERIFY_KEY }}"
